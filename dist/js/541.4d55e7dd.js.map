{"version":3,"file":"js/541.4d55e7dd.js","mappings":"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","sources":["webpack://hw1/./src/views/admin/AdminDashboard.vue","webpack://hw1/../src/index.ts","webpack://hw1/./src/methods/emitter.js","webpack://hw1/./src/components/admin/AdminNavbar.vue","webpack://hw1/./src/components/admin/AdminNavbar.vue?da63","webpack://hw1/./src/views/admin/AdminDashboard.vue?2147"],"sourcesContent":["<template>\r\n  <Navbar :key=\"$route.path\"/>\r\n  <div class=\"container-fluid mt-3 position-relative\">\r\n    <ToastMessages/>\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 拆分元件後再import進來 .vue記得要加\r\nimport emitter from '@/methods/emitter'\r\nimport ToastMessages from '@/components/ToastMessages.vue'\r\nimport Navbar from '../../components/admin/AdminNavbar.vue'\r\n\r\nexport default {\r\n  // 區域註冊\r\n  components: {\r\n    Navbar,\r\n    ToastMessages\r\n  },\r\n  provide () {\r\n    return {\r\n      emitter\r\n    }\r\n  },\r\n  created () {\r\n    const token = document.cookie.replace(/(?:(?:^|.*;\\s*)hexToken\\s*=\\s*([^;]*).*$)|^.*$/, '$1')\r\n    // console.log(token)\r\n    this.$http.defaults.headers.common.Authorization = token\r\n    const api = `${process.env.VUE_APP_API}api/user/check`\r\n    this.$http.post(api, this.user).then((res) => {\r\n      if (!res.data.success) {\r\n        this.$router.push('/login')\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n","export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt'\r\n\r\nconst emitter = mitt()\r\n\r\nexport default emitter\r\n","<template>\r\n  <nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">\r\n        <span class=\"text-warning f-kalam fs-2\">MetaHorse</span>\r\n        <img src=\"https://i.imgur.com/61qkafr.jpg\" alt=\"logo\" width=\"50\" class=\"logo\">\r\n      </a>\r\n      <!-- 漢堡選單按鈕 -->\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse ms-5\" id=\"navbarNavAltMarkup\">\r\n        <ul class=\"navbar-nav\">\r\n          <li class=\"nav-item\">\r\n           <RouterLink to=\"/dashboard/products\" class=\"nav-link fs-5\"\r\n           :class=\"{ 'text-warning':  routeName === '/dashboard/products' }\">產品</RouterLink>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <router-link to=\"/dashboard/orders\" class=\"nav-link fs-5\"\r\n            :class=\"{ 'text-warning':  routeName === '/dashboard/orders' }\">訂單</router-link>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <router-link to=\"/dashboard/coupons\" class=\"nav-link fs-5\"\r\n            :class=\"{ 'text-warning':  routeName === '/dashboard/coupons' }\">優惠券</router-link>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a href=\"#\" @click.prevent=\"logout\" class=\"nav-link fs-5\">登出</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n</template>\r\n\r\n<script>\r\n// 響應式行為會使用到折疊的 JavaScript 插件\r\nimport 'bootstrap/js/dist/collapse'\r\nexport default {\r\n  data () {\r\n    return {\r\n      isCollapse: false,\r\n      routeName: '',\r\n      status: {\r\n        // 對應品項 id 當loadingItem為一個特定品項的時候\r\n        // 我們就會把這個按鈕轉為disabled\r\n        loadingItem: ''\r\n      }\r\n    }\r\n  },\r\n  // watch: {\r\n  //   $route (to) {\r\n  //     console.log('$route', to)\r\n  //   }\r\n  // },\r\n  methods: {\r\n    logout () {\r\n      const api = `${process.env.VUE_APP_API}logout`\r\n      this.$http.post(api, this.user).then((res) => {\r\n        if (res.data.success) {\r\n          this.$router.push('/login')\r\n        }\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.routeName = this.$route.path // 點擊後圖標變色\r\n    console.log('this.$route.path', this.$route.path)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.num{\r\n  width:20px;\r\n  top: 5px;\r\n  right: 5px;\r\n  font-size: 12px;\r\n}\r\n/* 購物車按鈕 */\r\n.cart {\r\n  background-color: transparent;\r\n  position: relative;\r\n}\r\n/* 購物車按鈕定位 */\r\n.cart-box{\r\n  min-width: 450px;\r\n  position: absolute;\r\n  right: 1px;\r\n  top: 60px;\r\n}\r\n.logo {\r\n  position: absolute;\r\n  left: 165px;\r\n  top: 10px;\r\n}\r\n@media (max-width: 768px) {\r\n  .nav{\r\n    z-index: 1;\r\n  }\r\n  .cart-box{\r\n    min-width: 340px;\r\n  }\r\n  .logo {\r\n   position: absolute;\r\n   left: 145px;\r\n  }\r\n}\r\n@media (max-width: 576px) {\r\n  .logo {\r\n   position: absolute;\r\n   left: 140px;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./AdminNavbar.vue?vue&type=template&id=1f97d332&scoped=true\"\nimport script from \"./AdminNavbar.vue?vue&type=script&lang=js\"\nexport * from \"./AdminNavbar.vue?vue&type=script&lang=js\"\n\nimport \"./AdminNavbar.vue?vue&type=style&index=0&id=1f97d332&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kelvi\\\\Desktop\\\\github\\\\metahorse\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f97d332\"]])\n\nexport default __exports__","import { render } from \"./AdminDashboard.vue?vue&type=template&id=7467bccc\"\nimport script from \"./AdminDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./AdminDashboard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\kelvi\\\\Desktop\\\\github\\\\metahorse\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_Navbar","key","_ctx","path","_createElementVNode","_createVNode","_component_ToastMessages","_component_router_view","all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","id","_createElementBlock","_hoisted_3","_component_RouterLink","to","$data","_component_router_link","href","onClick","$options","data","isCollapse","routeName","status","loadingItem","methods","logout","api","this","$http","post","user","then","res","success","$router","mounted","$route","console","log","__exports__","components","Navbar","ToastMessages","provide","created","token","document","cookie","replace","defaults","headers","common","Authorization","render"],"sourceRoot":""}